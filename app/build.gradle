plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdkVersion 28
    testOptions.unitTests.includeAndroidResources = true
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.example.moviesearchapplication"
        minSdkVersion 23
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        proguardFiles getDefaultProguardFile('proguard-android.txt')
    }

    signingConfigs {
        release {
            storeFile file('D:\\Projects\\keyStore\\keyMovieSearch.jks')
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            signingConfig signingConfigs.release
            shrinkResources true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            debuggable true
            versionNameSuffix ".dev"
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    /*flavorDimensions "version"
    productFlavors {
        free {
            dimension "version"
            //applicationId = "com.example.moviesearchapplication"
        }
        paid {
            dimension "version"
            applicationId = "com.example.moviesearchapplication"
        }
    }*/

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
}

dependencies {
    //Firebase
    implementation platform('com.google.firebase:firebase-bom:28.1.0')
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-config-ktx'
    implementation 'com.google.firebase:firebase-messaging-ktx'

    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.4.20"
    implementation 'androidx.core:core-ktx:1.5.0'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    //implementation 'com.android.support:support-v4:19.1.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.0'

    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'
    implementation "android.arch.lifecycle:extensions:1.1.0"
    implementation "android.arch.lifecycle:viewmodel:1.1.0"

    //Network
    implementation 'com.squareup.retrofit2:retrofit:2.6.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.6.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.12.1'
    implementation "com.squareup.retrofit2:adapter-rxjava2:2.4.0"

    //Rxjava2
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.10'

    //Dagger2
    api 'com.google.dagger:dagger:2.24'
    kapt 'com.google.dagger:dagger-compiler:2.24'
    kapt "com.google.dagger:dagger-android-processor:2.24"

    //ImageLoader
    implementation ("com.github.bumptech.glide:glide:4.11.0")

    //Room
    def room_version = "2.3.0"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-rxjava2:$room_version"
    testImplementation "androidx.room:room-testing:$room_version"

    testImplementation 'junit:junit:4.+'
    testImplementation "org.mockito:mockito-core:3.11.2"
    testImplementation 'org.mockito:mockito-inline:2.13.0'
    testImplementation "com.google.truth:truth:1.1.3"
    testImplementation 'org.robolectric:robolectric:4.2.1'
    testImplementation 'android.arch.core:core-testing:1.1.0'
    testImplementation 'androidx.test:core:1.4.0'
    testImplementation 'androidx.test.espresso:espresso-core:+'
    testImplementation 'com.android.support.test.espresso:espresso-contrib:3.0.2'
    testImplementation 'androidx.test:rules:1.1.1'
    testImplementation 'androidx.test:runner:1.1.1'
    debugImplementation("androidx.fragment:fragment-testing:1.3.6")

    def mockito_version = "3.11.0"
    androidTestImplementation 'org.robolectric:robolectric:4.4'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test:rules:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:+'
    androidTestImplementation 'com.android.support.test.espresso:espresso-contrib:3.0.2'

}

android {
    signingConfigs {
        release {
            storeFile file('D:\\Projects\\keyStore\\keyMovieSearch.jks')
            storePassword 'Dywdywc1'
            keyAlias 'key0'
            keyPassword 'Dywdywc1'
        }
    }
    testOptions {
        unitTests.all {
            testLogging {
                showStandardStreams = true
            }
        }
    }
}